// This file have been generated by SRGEnt-Generator
using SRGEnt.Aspects;
using SRGEnt.Interfaces;

namespace SRGEnt.Generated
{
    public readonly struct PrimaryIndexComponentTestAspectSetter : IAspectMatcher<PrimaryIndexComponentTestAspectSetter>, IFirstComponentAspect<PrimaryIndexComponentTestAspectSetter>, ISecondComponentAspect<PrimaryIndexComponentTestAspectSetter>
    {
        private readonly PrimaryIndexComponentTestMatcher _parent;
        private readonly Aspect _aspect;
        public PrimaryIndexComponentTestAspectSetter(PrimaryIndexComponentTestMatcher parent, Aspect aspect)
        {
            _parent = parent;
            _aspect = aspect;
        }

        public PrimaryIndexComponentTestAspectSetter Requires => _parent.Requires;
        public PrimaryIndexComponentTestAspectSetter CannotHave => _parent.CannotHave;
        public PrimaryIndexComponentTestAspectSetter ShouldHaveAtLeastOneOf => _parent.ShouldHaveAtLeastOneOf;
        public void RecalculateHash()
        {
            _parent.RecalculateHash();
        }

        public PrimaryIndexComponentTestAspectSetter FirstComponent()
        {
            _aspect.Set(new AspectIndex(PrimaryIndexComponentTestEntity.FIRSTCOMPONENT_INDEX));
            return this;
        }

        public PrimaryIndexComponentTestAspectSetter SecondComponent()
        {
            _aspect.Set(new AspectIndex(PrimaryIndexComponentTestEntity.SECONDCOMPONENT_INDEX));
            return this;
        }
    }
}